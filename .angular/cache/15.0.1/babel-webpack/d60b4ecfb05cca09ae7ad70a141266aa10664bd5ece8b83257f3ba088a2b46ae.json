{"ast":null,"code":"import { RouterModule, Routes } from '@angular/router';\nimport { ValidarTokenGuard } from './guards/validar-token.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n// en este caso tendremos dos padres => auth y protected y sus respectivos hijos\nconst routes = [{\n  path: 'auth',\n  loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)\n}, {\n  path: 'dashboard',\n  loadChildren: () => import('./protected/protected.module').then(m => m.ProtectedModule),\n  canActivate: [ValidarTokenGuard],\n  canLoad: [ValidarTokenGuard]\n}, {\n  path: '**',\n  redirectTo: 'auth'\n}];\n// Si queremos usar Hash pondriamosn userHash a true\nexport class AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes, {\n      useHash: false\n    }), RouterModule]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}